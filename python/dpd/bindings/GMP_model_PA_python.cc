/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(GMP_model_PA.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(fdfe5a9ae5e44f7bb3ecff10b9ff26a8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dpd/GMP_model_PA.h>
// pydoc.h is automatically generated in the build directory
#include <GMP_model_PA_pydoc.h>

void bind_GMP_model_PA(py::module& m)
{

    using GMP_model_PA = ::gr::dpd::GMP_model_PA;


    py::class_<GMP_model_PA,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<GMP_model_PA>>(m, "GMP_model_PA", D(GMP_model_PA))

        .def(py::init(&GMP_model_PA::make),
             py::arg("model_param1"),
             py::arg("model_param2"),
             py::arg("model_param3"),
             py::arg("model_param4"),
             py::arg("model_param5"),
             py::arg("mode"),
             py::arg("coeff1"),
             py::arg("coeff2"),
             D(GMP_model_PA, make))


        .def("set_K_a", &GMP_model_PA::set_K_a, py::arg("v"), D(GMP_model_PA, set_K_a))


        .def("set_L_a", &GMP_model_PA::set_L_a, py::arg("v"), D(GMP_model_PA, set_L_a))


        .def("set_K_b", &GMP_model_PA::set_K_b, py::arg("v"), D(GMP_model_PA, set_K_b))


        .def("set_M_b", &GMP_model_PA::set_M_b, py::arg("v"), D(GMP_model_PA, set_M_b))


        .def("set_L_b", &GMP_model_PA::set_L_b, py::arg("v"), D(GMP_model_PA, set_L_b))


        .def("set_mode",
             &GMP_model_PA::set_mode,
             py::arg("mode"),
             D(GMP_model_PA, set_mode))

        ;
}
